<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operator on youngchul&#39;s website</title>
    <link>https://youngchul.github.io/tags/operator/</link>
    <description>Recent content in Operator on youngchul&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2019 방영철 (Youngchul Bang)</copyright>
    <lastBuildDate>Mon, 26 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://youngchul.github.io/tags/operator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubebuilder 사용해서 Kubernetes Controller 만들기</title>
      <link>https://youngchul.github.io/posts/kubernetes-controller-using-kubebuilder/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://youngchul.github.io/posts/kubernetes-controller-using-kubebuilder/</guid>
      <description>Kubernetes Custom Controller를 Go 언어로 만드는 방법은 다양합니다. client-go 라이브러리를 이용해서 Kubernetes API를 직접 호출하는 방식을 주로 사용하지만, sample-controller 예제에서 볼 수 있듯이 client-go 라이브리의 동작방식과 컴포넌트들을 이해하고 알맞게 사용해야 합니다. Kubebuilder 또는 Operator SDK 프레임워크가 client-go 라이브러리를 올바른 방식으로 사용해서 Kubernetes Controller를 보다 쉽게 만들 수 있도록 도와줍니다.
이 글에서는 Kubebuilder v2 버전을 사용해서 Memcached Controller 만드는 방법을 소개합니다. Memcached Controller 코드는 Operator SDK 예제 중 하나인 memcached-operator를 참고했습니다.</description>
    </item>
    
  </channel>
</rss>